<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd ">
 
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:property-placeholder location="classpath:database.properties"/>  
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<task:annotation-driven/>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.nibble.starfood" />
	
	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <beans:property name="driverClass" value="${database.driver}" />
        <beans:property name="jdbcUrl" value="${database.url}" />
        <beans:property name="user" value="${database.user}" />
        <beans:property name="password" value="${database.password}" />
        <beans:property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <beans:property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <beans:property name="maxIdleTime" value="18000"/>
        <beans:property name="maxStatements"  value="50"/>
        <beans:property name="idleConnectionTestPeriod" value="50" />
     </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<beans:property name="dataSource" ref="dataSource"></beans:property>
    	<beans:property name="annotatedClasses">
    	<beans:list>
    		<beans:value>com.nibble.starfood.hibernatemodel.CustDet</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.Area</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.MealPlan</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.Holidays</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.CustBillHist</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.City</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.FdbkQues</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.Pincode</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.State</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.CustFdbkRelt</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.SaveComment</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.OrderDateDetails</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.FoodTyp</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.Address</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.CustCupnRelt</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.Cupn</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.SingleDayRelt</beans:value>
    		<beans:value>com.nibble.starfood.hibernatemodel.PkgFoodCatg</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.PkgFoodItm</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.PkgSizTyp</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.MealTyp</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.MealTime</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.PkgConfigRelt</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.PkgPrice</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.DelvChrg</beans:value>
			<beans:value>com.nibble.starfood.hibernatemodel.PkgDur</beans:value>
			<beans:value>com.nibble.starfood.hibernatemodel.pkgDuration</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.WeekTyp</beans:value>  
            <beans:value>com.nibble.starfood.hibernatemodel.MenuTyp</beans:value>
            <beans:value>com.nibble.starfood.hibernatemodel.PayMod</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.Tax</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.CustOrdrs</beans:value>  
            <beans:value>com.nibble.starfood.hibernatemodel.CustOrdCancel</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.CustOrdDet</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.CancelledOrderDetails</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.CustBillHist</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.CupnDet</beans:value> 
          	<beans:value>com.nibble.starfood.hibernatemodel.AddrTyp</beans:value>
          	<beans:value>com.nibble.starfood.hibernatemodel.PaymentGatewayDet</beans:value> 
            <beans:value>com.nibble.starfood.hibernatemodel.EorderClientDetail</beans:value> 
            
            
        </beans:list>
    	</beans:property>
    	<beans:property name="hibernateProperties">
    		<beans:props>
    			<beans:prop key="hibernate.dialect" >${hibernate.dialect}</beans:prop>
    			<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
    			<beans:prop key="hibernate.c3p0.timeout">180</beans:prop>
				<beans:prop key="hibernate.c3p0.max_idle_time">180</beans:prop> 
				<beans:prop key="hibernate.c3p0.idle_test_period">100</beans:prop>
    		</beans:props>   	
    	</beans:property>
    </beans:bean>
    
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="email-smtp.us-west-2.amazonaws.com" />
        <beans:property name="port" value="25" />
        <beans:property name="username" value="info@spicebox.in" />
        <beans:property name="password" value="macintosh1" />
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtps.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.required">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
        
     
    <!-- Configure to plugin JSON as request and response in method handler -->
   
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
     
    <beans:bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="transactionManager">
    <beans:property name="sessionFactory" ref="sessionFactory"/>
    <beans:property name="dataSource" ref="dataSource" />
  </beans:bean>
</beans:beans>
