package com.nibble.starfood.hibernatemodel;

// Generated 12 Sep, 2015 6:26:32 PM by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnore;





/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address")
public class Address implements java.io.Serializable {
private static final long serialVersionUID = 1L;
    
    private Integer id;
    @JsonIgnore
	private Integer custDetId;
    
    private Pincode pincode;
	private Integer addrTypeId;
    @JsonIgnore
	private Integer cityId;
    private State state;
	private City city;
    private Area area;
	private Integer areaId;
	private String houseNo;
	private int stateId;
	private String laneDesc;
	private String landMrk;
	private int actAddrFlg;
	private int addrflg; 
	@JsonIgnore
	private Date crtTs;
	@JsonIgnore
	private String crtId;
	@JsonIgnore
	private String updId;
	@JsonIgnore
	private Date updTs;
	@JsonIgnore
	private String loginTyp;
	

	public Address() {
	}

	public Address(Integer custDetId, Integer addrTypeId, Integer cityId,
			Integer areaId, String houseNo, String laneDesc, String landMrk,
			Date crtTs, String crtId, String updId, Date updTs,
			String loginTyp, int addrflg) {
		this.addrflg=addrflg;
		this.custDetId = custDetId;
		this.addrTypeId = addrTypeId;
		//this.cityId = cityId;
		this.areaId = areaId;
		this.houseNo = houseNo;
		this.laneDesc = laneDesc;
		this.landMrk = landMrk;
		this.crtTs = crtTs;
		this.crtId = crtId;
		this.updId = updId;
		this.updTs = updTs;
		this.loginTyp = loginTyp;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "cust_det_id")
	public Integer getCustDetId() {
		return this.custDetId;
	}

	public void setCustDetId(Integer custDetId) {
		this.custDetId = custDetId;
	}

	@Column(name = "addr_type_id")
	public Integer getAddrTypeId() {
		return this.addrTypeId;
	}

	public void setAddrTypeId(Integer addrTypeId) {
		this.addrTypeId = addrTypeId;
	}

	/*@Column(name = "city_id")
	public Integer getCityId() {
		return this.cityId;
	}

	public void setCityId(Integer cityId) {
		this.cityId = cityId;
	}*/

	/*@Column(name = "area_id")
	public Integer getAreaId() {
		return this.areaId;
	}

	public void setAreaId(Integer areaId) {
		this.areaId = areaId;
	}*/

	
	@Column(name = "house_no", length = 100)
	public String getHouseNo() {
		return this.houseNo;
	}

	public void setHouseNo(String houseNo) {
		this.houseNo = houseNo;
	}

	@Column(name = "lane_desc", length = 100)
	public String getLaneDesc() {
		return this.laneDesc;
	}

	public void setLaneDesc(String laneDesc) {
		this.laneDesc = laneDesc;
	}

	@Column(name = "land_mrk", length = 100)
	public String getLandMrk() {
		return this.landMrk;
	}

	public void setLandMrk(String landMrk) {
		this.landMrk = landMrk;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "crt_ts", length = 100)
	public Date getCrtTs() {
		return this.crtTs;
	}

	public void setCrtTs(Date crtTs) {
		this.crtTs = crtTs;
	}

	@Column(name = "crt_id", length = 45)
	public String getCrtId() {
		return this.crtId;
	}

	public void setCrtId(String crtId) {
		this.crtId = crtId;
	}

	@Column(name = "upd_id", length = 45)
	public String getUpdId() {
		return this.updId;
	}

	public void setUpdId(String updId) {
		this.updId = updId;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upd_ts", length = 19)
	public Date getUpdTs() {
		return this.updTs;
	}

	public void setUpdTs(Date updTs) {
		this.updTs = updTs;
	}

	@Column(name = "login_typ", length = 100)
	public String getLoginTyp() {
		return this.loginTyp;
	}

	public void setLoginTyp(String loginTyp) {
		this.loginTyp = loginTyp;
	}
	@Column(name = "addr_f", length = 100)
	public int getAddrflg() {
		return addrflg;
	}

	public void setAddrflg(int addrflg) {
		this.addrflg = addrflg;
	}
	/*@Column(name = "state_id")
	public int getStateId() {
		return stateId;
	}

	public void setStateId(int stateId) {
		this.stateId = stateId;
	}*/
	@Column(name = "active_addr_f", length = 100)
	public int getActAddrFlg() {
		return actAddrFlg;
	}

	public void setActAddrFlg(int actAddrFlg) {
		this.actAddrFlg = actAddrFlg;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "city_id", nullable = false)
	public City getCity() {
		return city;
	}

	public void setCity(City city) {
		this.city = city;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "area_id", nullable = false)
	public Area getArea() {
		return area;
	}

	public void setArea(Area area) {
		this.area = area;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "pincode", nullable = false)
	public Pincode getPincode() {
		return pincode;
	}

	public void setPincode(Pincode pincode) {
		this.pincode = pincode;
	}
	/*@Column(name = "pincode", length = 100)
	public String getPincode() {
		return pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}*/
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "state_id", nullable = false)
	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}

	

	
	

   /* @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CITY_ID")
    public City getCity() {
		return citys;
	}

	public void setCity(City city) {
		this.citys = city;
	}
	*/

}
